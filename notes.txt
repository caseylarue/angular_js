directives: direct something to happen within you HTML

templates: are the HTML docs that you as a developer work on
- you add directives and write other code that gets compiled into a view
- the thing that users see
- templates get compiled into views by the browser

data binding
- how to get database specific data out of the dom without holding all of the data in HTML
- you can add data to the $scope using that ng-init directive

 <h3>{{ 49567 * 2243 }} </h3>
<h3><span ng-bind='49567 * 2243'></span></h3> <!-- executes  -->
 <div ng-init="students = [ {name: 'trey', age: 34}, {name: 'michael', age: 34}, {name: 'speros', age: 35}, {name: 'martin', age: 45}]">
	<ul>
		<li ng-repeat='student in students'>{{ student.name }}, {{ student.age }}</li>
	</ul>
</div>

<div ng-init="names = [ {name: 'trey'}, {name: 'michael'}, {name: 'speros'}, {name: 'martin'}]">
	<ul>
		<li ng-repeat='person in names'>{{ person.name }}</li>
	</ul>
</div>

 <div ng-init="names = ['trey', 'michael', 'speros', 'martin']">
	<ul>
		<li ng-repeat='name in names'>{{ name }}</li>
	</ul>
</div>


HTML view -- data binding -- AngularJS scope -- AngularJS controller
								- js view-model
								- js data-model

controllers are responsible for pass data to the views by managing the $scope (not obtaining data)

Where do we get our data from? 
Providers!
Providers provide data to the controller.  They come in factories and services.  Both provide data/information to the controllers but do it differently.

Build a Factory to provide data to the ninjasController




